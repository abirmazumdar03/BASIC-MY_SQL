-- *************************************** CASE WHEN STATEMENTS **********************************
-- SAME AS THAT OF IF-ELSE LADDER
-- IF NO CASE CONDITIONS ARE SATISFIED THEN ELSE CLAUSE IS EXECUTED
-- IF ELSE IS MISSING AND NO CONDITION ARE TRUE , IT RETURNS NULL
-- USED FOR CLASSIFYING DATA , COUNT USERS , HANDEL NULLS etc

-- SYNTAX
-- CASE
-- 		WHEN CONDITION1 THEN ACTION
-- 		WHEN CONDITION2 THEN ACTION
-- 		ELSE OTHER_ACTION
-- END AS NEW_COLUMN

select * from payments;

SELECT P_ID,AMOUNT,
CASE
	WHEN AMOUNT>=100 THEN 1
    WHEN AMOUNT>50 AND AMOUNT<100 THEN 2
    ELSE 3
END AS CATEGORY_TAG
FROM PAYMENTS;

-- **************************** CASE WHEN EXPRESSION *****************************
-- SLIGHTLY DIFFERENT THAN CASE WHEN CONDITION
-- SYNTAX
-- SYNTAX
-- CASE <COL_1>
-- 		WHEN VALE1 THEN ACTION
-- 		WHEN VALUE2 THEN ACTION
-- 		ELSE OTHER_ACTION
-- END AS NEW_COLUMN // NEW_COLUMN ALISING

-- HERE WE SELECT A COLUMN AND THEN USE SOME HARD CORE VALUES TO CHECK FOR EQUALITY IN THAT COLUMN AND ASSIGN A ACTION AS PER THAT

SELECT P_ID,
CASE AMOUNT
	WHEN 300 THEN "GOLD"
    WHEN 100 THEN "PRIME"
    ELSE "REGULAR"
END AS CUSTOMER_TAG
FROM PAYMENTS;