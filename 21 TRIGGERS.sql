-- ******************************** TRIGERS **************************************************
-- TRIGERS : ARE CERTAIN OPERATIONS THAT ARE CARRIED OUT WHEN A PARTICULAR EVENT TAKES PLACE
-- JUST LIKE AWS LAMBDA : AN EVENT DRIVEN FUNCTION
-- EVENTS ARE ALWAYS IN THE FORM OF : INSERT , UPDATE OR DELETE (DML COMMANDS)
-- AFTER AN PARTICULAR EVENT TAKE PLACE MODIFY_DATA , CHECK_DATA , AUDIT_TABLE

-- **************** QUERRY TO LIST DOWN ALL THE TRIGGERS UNDER A DB *****************************
SHOW TRIGGERS;
CALL PRINT_TABLE2();

-- ************* CREATE A NEW COLUMN TAX% AND TAX AMOUNT*********************
ALTER TABLE TABLE_2
ADD COLUMN TAX_PERCENTAGE DOUBLE AFTER SALARY,
ADD COLUMN TAX_AMOUNT DOUBLE AFTER TAX_PERCENTAGE; 

-- **************** I WANT TO CREATE A TRIGGER WHICH WILL ************************
-- EVENT INSERT : THE MOMENT I ADD A SALARY I.E THIS TRIGGER WILL ONLY BE ALIVE WHEN WE INSERT A SALARY
-- TRIGGRED ACTION 1. AUTOMATICALLY ASSIGN A CORRESPONDING TAX_PERCENTAGE AS PER THE SALARY
-- 				   2. AS WELL AS AUTOMATICALLY CALCULATES THE TAX AMOUNT ALSO

DELIMITER $$
CREATE TRIGGER SET_TAX_VALUES
BEFORE INSERT ON TABLE_2
FOR EACH ROW
BEGIN
	-- SET THE TAX PERCENTAGES AS PER THE SALARY RANGE
	IF NEW.SALARY<=4000 THEN
		SET NEW.TAX_PERCENTAGE = 5.00;
	ELSEIF NEW.SALARY>=4001 AND NEW.SALARY<=7500 THEN
		SET NEW.TAX_PERCENTAGE = 9.00;
	ELSE 
		SET NEW.TAX_PERCENTAGE = 10.00;
	END IF;
    -- CALCULATE TAX AMOUNT
    SET NEW.TAX_AMOUNT=(NEW.SALARY * NEW.TAX_PERCENTAGE)/100;
END $$
DELIMITER ;

-- NOW LETS INSERT VALUES INTO THE TABLE
INSERT INTO TABLE_2(ID,NAME,SALARY)
VALUES
("E25","JACK",5000.00),
("E15","JHONES",2200.00),
("E85","JTLL",8600.00);

-- ************* TO DELETE A TRIGGER ********************
DROP TRIGGER UPDATE_TAX_VALUES;

-- ********************** EVENT : UPDATE ********************************
DELIMITER $$
CREATE TRIGGER UPDATE_TAX_VALUES
BEFORE UPDATE ON TABLE_2
FOR EACH ROW
BEGIN
	-- SET THE TAX PERCENTAGES AS PER THE SALARY RANGE
	IF NEW.SALARY<=4000 THEN
		SET NEW.TAX_PERCENTAGE = 5.00;
	ELSEIF NEW.SALARY>=4001 AND NEW.SALARY<=7500 THEN
		SET NEW.TAX_PERCENTAGE = 9.00;
	ELSE 
		SET NEW.TAX_PERCENTAGE = 10.00;
	END IF;
    -- CALCULATE TAX AMOUNT
    SET NEW.TAX_AMOUNT=(NEW.SALARY * NEW.TAX_PERCENTAGE)/100;
END $$
DELIMITER ;

-- ADD FEW MORE TUPLES AND THEN UPDATE SOME OF THEIR VALUES
INSERT INTO table_2(ID,NAME,SALARY)
VALUES
("E26","DAVID",7500.00),
("E50","BEN",9500.00),
("E40","GWEN",6500.00);

-- UPDATE THE SALARY OF GEWN AND BEN
UPDATE TABLE_2
SET SALARY = CASE ID
	WHEN "E40" THEN 6750.00
    WHEN "E50" THEN 8500.00
    ELSE SALARY
END
WHERE ID IN ("E40","E50");

-- *********************** AFTER TYPE ********************************
-- WE WILL CREATE A NEW TABLE TAX COLLECTIONS
-- DATE-TIME (PK) , TOTAL_TAX AMOUNT
-- THEN WE WILL CREATE TRIGGER RELATED TO AFTER INSERT , UPDATE AND DELETE WHICH WILL REFLECT THE CHANGES IN THE TAX_TABLE

CREATE TABLE TAX_COLLECTIONS
(DATE_TIME DATETIME PRIMARY KEY DEFAULT NOW(),
TOTAL_TAX DOUBLE
);

INSERT INTO tax_collections(TOTAL_TAX)
SELECT SUM(TAX_AMOUNT)
FROM TABLE_2;

-- CREATED A PROCEDURE TO PRINT THE TAX_COLECTIONS TABLE
DELIMITER $$
CREATE PROCEDURE PRINT_COLLECTIONS()
BEGIN
	SELECT * FROM tax_collections;
END $$
DELIMITER ;
CALL PRINT_COLLECTIONS();

-- *************** A. NOW WE WILL CREATE TRIGGERS THAN WILL AFFECT THE TAX_COOLECTIONS TABLE AFTER INSERT UPDATE OR DELETE FROM TABLE_2****************
-- ***** A.1. TRIGGER THAT WILL UPDATE THE TOTAL_TAX IN THE TAX_COLLECTION TABLE WHEN A NEW EMPLOYEE IS INSERTED

DELIMITER $$
CREATE TRIGGER AFTER_SALARY_INSERT
AFTER INSERT ON TABLE_2
FOR EACH ROW
BEGIN
	INSERT INTO tax_collections(TOTAL_TAX)
	SELECT SUM(TAX_AMOUNT)
	FROM TABLE_2;
END $$
DELIMITER ;

-- *************** NOW WE WILL CREATE TRIGGERS THAN WILL AFFECT THE TAX_COOLECTIONS TABLE AFTER INSERT UPDATE OR DELETE FROM TABLE_2****************
-- ***** A.2. TRIGGER THAT WILL UPDATE THE TOTAL_TAX IN THE TAX_COLLECTION TABLE WHEN An exiting employee SALARY IS UPDATED

DELIMITER $$
CREATE TRIGGER AFTER_SALARY_UPDATE
AFTER UPDATE ON TABLE_2
FOR EACH ROW
BEGIN
	INSERT INTO tax_collections(TOTAL_TAX)
	SELECT SUM(TAX_AMOUNT)
	FROM TABLE_2;
END $$
DELIMITER ;

-- *************** NOW WE WILL CREATE TRIGGERS THAN WILL AFFECT THE TAX_COOLECTIONS TABLE AFTER INSERT UPDATE OR DELETE FROM TABLE_2****************
-- ***** A.3. TRIGGER THAT WILL UPDATE THE TOTAL_TAX IN THE TAX_COLLECTION TABLE WHEN An exiting employee SALARY IS DELETED

DELIMITER $$
CREATE TRIGGER AFTER_SALARY_DELETE
AFTER DELETE ON TABLE_2
FOR EACH ROW
BEGIN
	INSERT INTO tax_collections(TOTAL_TAX)
	SELECT SUM(TAX_AMOUNT)
	FROM TABLE_2;
END $$
DELIMITER ;

-- NOW LETS ADD SOME MORE MENS 
INSERT INTO table_2(ID,NAME,SALARY)
VALUES
("E27","DAVID",4500.00),
("E59","BEN",5500.00),
("E42","GIAN",7500.00);

-- NOW UPDATE SOME SALRIES
UPDATE TABLE_2
SET SALARY = CASE ID
	WHEN "E25" THEN 6750.00
    WHEN "E50" THEN 4500.00
    ELSE SALARY
END
WHERE ID IN ("E25","E50");

-- NOTE DELETE TRIGGER NOT BEING PRACTISED TO AVOID COMPLEXITY 
