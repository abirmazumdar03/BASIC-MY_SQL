--  ************************************* STROED PROCEDURE ***************************************************
-- 1. Its just like method-function call but SQL way
-- 2. You prepare a SQL querry and stored it via a method-function name Here Procedure name
-- 3. Promotes Re-usability of Frequently used Querries
-- 4. REDUCES NETWORK TRAFFIC
-- 5. INCREASES PERFORMANCE
-- 6. INCREASES MEMORY-FOOTPRINT FOR EVERY CONNECTION

#TELLS MYSQL THAT NEW DELIMITER IS $$ SIGN INSTEAD OF ;
DELIMITER $$            
CREATE PROCEDURE PRINT_BTECH()
BEGIN
	SELECT * FROM BTECH_ADMISSION;
END $$
DELIMITER ;
#RE-STORE BACK TO THE ORIGINAL DELIMITER ;

CALL PRINT_BTECH();
# NO NEED TO RE-WRITE A LONG QUERRY OF SELECT * FROM BTECH_ADMISSION

-- ************** LETS CREATE SOME MORE STORED PROCEDURES *******************

DELIMITER $$
CREATE PROCEDURE PRINT_COURSE()
BEGIN
	SELECT * FROM COURSE_DETAILS;
END $$

CREATE PROCEDURE PRINT_STUDENT()
BEGIN
	SELECT * FROM STUDENT_DETAILS;
END $$
DELIMITER ;

-- ************** TO DELETE A STORED PROCEDURE *********************************
DROP PROCEDURE PRINT_STUDENT;

-- ********************** PASSING INPUT TO A PROCEDURE ****************************
-- WRITE A PROCEDURE TO TAKE COURSE AS INPUT AND PRINT THE NAMES OF THE STUDENTS ENROLLED UNDER IT
-- TO HAVE MULTIPLE PARAMETRS USE 
-- CREATE PROCEDURE <PROCEDURE_NAME>(IN TARGET1 <DATA_TYPE> , IN TARGET2 <DATA_TYPE>)

-- HERE TARGET IS THE PARAMETER WHICH WILL CARRY THE REQUIRED COURSE GIVEN BY THE USER
DELIMITER $$
CREATE PROCEDURE STUDENTS_COURSE(IN TARGET VARCHAR(10))
BEGIN
	SELECT concat(FIRST_NAME," ",LAST_NAME) AS FULL_NAME
    FROM BTECH_ADMISSION
    WHERE FIRST_NAME IS NOT NULL AND LAST_NAME IS NOT NULL
    AND COURSE=TARGET;
END $$

-- LETS TEST OUT THE PROCEDURE
CALL STUDENTS_COURSE("BCA") $$
DELIMITER ;